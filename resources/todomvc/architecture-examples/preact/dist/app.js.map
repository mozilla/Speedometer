{"version":3,"file":"app.js","sources":["../node_modules/preact/dist/preact.module.js","../node_modules/preact/hooks/dist/hooks.module.js","../src/app/model.js","../src/app/header.js","../node_modules/classnames/index.js","../src/app/item.js","../src/app/utils.js","../src/app/main.js","../src/app/footer.js","../src/app/app.js","../src/index.js"],"sourcesContent":["var EMPTY_OBJ = {};\nvar EMPTY_ARR = [];\nvar IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\n\nfunction assign(obj, props) {\n  // @ts-ignore We change the type of `obj` to be `O & P`\n  for (var i in props) {\n    obj[i] = props[i];\n  }\n\n  return obj;\n}\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\n\nfunction removeNode(node) {\n  var parentNode = node.parentNode;\n  if (parentNode) parentNode.removeChild(node);\n}\nvar slice = EMPTY_ARR.slice;\n\n/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n * @param {import('../internal').VNode} [oldVNode]\n * @param {import('../internal').ErrorInfo} [errorInfo]\n */\nfunction _catchError(error, vnode, oldVNode, errorInfo) {\n  /** @type {import('../internal').Component} */\n  var component, ctor, handled;\n\n  for (; vnode = vnode.__;) {\n    if ((component = vnode.__c) && !component.__) {\n      try {\n        ctor = component.constructor;\n\n        if (ctor && ctor.getDerivedStateFromError != null) {\n          component.setState(ctor.getDerivedStateFromError(error));\n          handled = component.__d;\n        }\n\n        if (component.componentDidCatch != null) {\n          component.componentDidCatch(error, errorInfo || {});\n          handled = component.__d;\n        } // This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\n\n        if (handled) {\n          return component.__E = component;\n        }\n      } catch (e) {\n        error = e;\n      }\n    }\n  }\n\n  throw error;\n}\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\n\nvar options = {\n  __e: _catchError\n};\n\nvar vnodeId = 0;\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\n\nfunction createElement(type, props, children) {\n  var normalizedProps = {},\n      key,\n      ref,\n      i;\n\n  for (i in props) {\n    if (i == 'key') key = props[i];else if (i == 'ref') ref = props[i];else normalizedProps[i] = props[i];\n  }\n\n  if (arguments.length > 2) {\n    normalizedProps.children = arguments.length > 3 ? slice.call(arguments, 2) : children;\n  } // If a Component VNode, check for and apply defaultProps\n  // Note: type may be undefined in development, must never error here.\n\n\n  if (typeof type == 'function' && type.defaultProps != null) {\n    for (i in type.defaultProps) {\n      if (normalizedProps[i] === undefined) {\n        normalizedProps[i] = type.defaultProps[i];\n      }\n    }\n  }\n\n  return createVNode(type, normalizedProps, key, ref, null);\n}\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\n\nfunction createVNode(type, props, key, ref, original) {\n  // V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n  // Do not inline into createElement and coerceToVNode!\n  var vnode = {\n    type: type,\n    props: props,\n    key: key,\n    ref: ref,\n    __k: null,\n    __: null,\n    __b: 0,\n    __e: null,\n    // _nextDom must be initialized to undefined b/c it will eventually\n    // be set to dom.nextSibling which can return `null` and it is important\n    // to be able to distinguish between an uninitialized _nextDom and\n    // a _nextDom that has been set to `null`\n    __d: undefined,\n    __c: null,\n    __h: null,\n    constructor: undefined,\n    __v: original == null ? ++vnodeId : original\n  }; // Only invoke the vnode hook if this was *not* a direct copy:\n\n  if (original == null && options.vnode != null) options.vnode(vnode);\n  return vnode;\n}\nfunction createRef() {\n  return {\n    current: null\n  };\n}\nfunction Fragment(props) {\n  return props.children;\n}\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\n\nvar isValidElement = function isValidElement(vnode) {\n  return vnode != null && vnode.constructor === undefined;\n};\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\n\nfunction Component(props, context) {\n  this.props = props;\n  this.context = context;\n}\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\n\nComponent.prototype.setState = function (update, callback) {\n  // only clone state when copying to nextState the first time.\n  var s;\n\n  if (this.__s != null && this.__s !== this.state) {\n    s = this.__s;\n  } else {\n    s = this.__s = assign({}, this.state);\n  }\n\n  if (typeof update == 'function') {\n    // Some libraries like `immer` mark the current state as readonly,\n    // preventing us from mutating it, so we need to clone it. See #2716\n    update = update(assign({}, s), this.props);\n  }\n\n  if (update) {\n    assign(s, update);\n  } // Skip update if updater function returned null\n\n\n  if (update == null) return;\n\n  if (this.__v) {\n    if (callback) {\n      this._sb.push(callback);\n    }\n\n    enqueueRender(this);\n  }\n};\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\n\n\nComponent.prototype.forceUpdate = function (callback) {\n  if (this.__v) {\n    // Set render mode so that we can differentiate where the render request\n    // is coming from. We need this because forceUpdate should never call\n    // shouldComponentUpdate\n    this.__e = true;\n    if (callback) this.__h.push(callback);\n    enqueueRender(this);\n  }\n};\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\n\n\nComponent.prototype.render = Fragment;\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\n\nfunction getDomSibling(vnode, childIndex) {\n  if (childIndex == null) {\n    // Use childIndex==null as a signal to resume the search from the vnode's sibling\n    return vnode.__ ? getDomSibling(vnode.__, vnode.__.__k.indexOf(vnode) + 1) : null;\n  }\n\n  var sibling;\n\n  for (; childIndex < vnode.__k.length; childIndex++) {\n    sibling = vnode.__k[childIndex];\n\n    if (sibling != null && sibling.__e != null) {\n      // Since updateParentDomPointers keeps _dom pointer correct,\n      // we can rely on _dom to tell us if this subtree contains a\n      // rendered DOM node, and what the first rendered DOM node is\n      return sibling.__e;\n    }\n  } // If we get here, we have not found a DOM node in this vnode's children.\n  // We must resume from this vnode's sibling (in it's parent _children array)\n  // Only climb up and search the parent if we aren't searching through a DOM\n  // VNode (meaning we reached the DOM parent of the original vnode that began\n  // the search)\n\n\n  return typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\n\nfunction renderComponent(component) {\n  var vnode = component.__v,\n      oldDom = vnode.__e,\n      parentDom = component.__P;\n\n  if (parentDom) {\n    var commitQueue = [];\n    var oldVNode = assign({}, vnode);\n    oldVNode.__v = vnode.__v + 1;\n    diff(parentDom, vnode, oldVNode, component.__n, parentDom.ownerSVGElement !== undefined, vnode.__h != null ? [oldDom] : null, commitQueue, oldDom == null ? getDomSibling(vnode) : oldDom, vnode.__h);\n    commitRoot(commitQueue, vnode);\n\n    if (vnode.__e != oldDom) {\n      updateParentDomPointers(vnode);\n    }\n  }\n}\n/**\n * @param {import('./internal').VNode} vnode\n */\n\n\nfunction updateParentDomPointers(vnode) {\n  if ((vnode = vnode.__) != null && vnode.__c != null) {\n    vnode.__e = vnode.__c.base = null;\n\n    for (var i = 0; i < vnode.__k.length; i++) {\n      var child = vnode.__k[i];\n\n      if (child != null && child.__e != null) {\n        vnode.__e = vnode.__c.base = child.__e;\n        break;\n      }\n    }\n\n    return updateParentDomPointers(vnode);\n  }\n}\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\n\n\nvar rerenderQueue = [];\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nvar prevDebounce;\nvar defer = typeof Promise == 'function' ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout;\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\n\nfunction enqueueRender(c) {\n  if (!c.__d && (c.__d = true) && rerenderQueue.push(c) && !process.__r++ || prevDebounce !== options.debounceRendering) {\n    prevDebounce = options.debounceRendering;\n    (prevDebounce || defer)(process);\n  }\n}\n/**\n * @param {import('./internal').Component} a\n * @param {import('./internal').Component} b\n */\n\nvar depthSort = function depthSort(a, b) {\n  return a.__v.__b - b.__v.__b;\n};\n/** Flush the render queue by rerendering all queued components */\n\n\nfunction process() {\n  var c;\n  rerenderQueue.sort(depthSort); // Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n  // process() calls from getting scheduled while `queue` is still being consumed.\n\n  while (c = rerenderQueue.shift()) {\n    if (c.__d) {\n      var renderQueueLength = rerenderQueue.length;\n      renderComponent(c);\n\n      if (rerenderQueue.length > renderQueueLength) {\n        // When i.e. rerendering a provider additional new items can be injected, we want to\n        // keep the order from top to bottom with those new items so we can handle them in a\n        // single pass\n        rerenderQueue.sort(depthSort);\n      }\n    }\n  }\n\n  process.__r = 0;\n}\n\nprocess.__r = 0;\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\n\nfunction diffChildren(parentDom, renderResult, newParentVNode, oldParentVNode, globalContext, isSvg, excessDomChildren, commitQueue, oldDom, isHydrating) {\n  var i, j, oldVNode, childVNode, newDom, firstChildDom, refs; // This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n  // as EMPTY_OBJ._children should be `undefined`.\n\n  var oldChildren = oldParentVNode && oldParentVNode.__k || EMPTY_ARR;\n  var oldChildrenLength = oldChildren.length;\n  newParentVNode.__k = [];\n\n  for (i = 0; i < renderResult.length; i++) {\n    childVNode = renderResult[i];\n\n    if (childVNode == null || typeof childVNode == 'boolean' || typeof childVNode == 'function') {\n      childVNode = newParentVNode.__k[i] = null;\n    } // If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n    // or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n    // it's own DOM & etc. pointers\n    else if (typeof childVNode == 'string' || typeof childVNode == 'number' || // eslint-disable-next-line valid-typeof\n    typeof childVNode == 'bigint') {\n      childVNode = newParentVNode.__k[i] = createVNode(null, childVNode, null, null, childVNode);\n    } else if (Array.isArray(childVNode)) {\n      childVNode = newParentVNode.__k[i] = createVNode(Fragment, {\n        children: childVNode\n      }, null, null, null);\n    } else if (childVNode.__b > 0) {\n      // VNode is already in use, clone it. This can happen in the following\n      // scenario:\n      //   const reuse = <div />\n      //   <div>{reuse}<span />{reuse}</div>\n      childVNode = newParentVNode.__k[i] = createVNode(childVNode.type, childVNode.props, childVNode.key, childVNode.ref ? childVNode.ref : null, childVNode.__v);\n    } else {\n      childVNode = newParentVNode.__k[i] = childVNode;\n    } // Terser removes the `continue` here and wraps the loop body\n    // in a `if (childVNode) { ... } condition\n\n\n    if (childVNode == null) {\n      continue;\n    }\n\n    childVNode.__ = newParentVNode;\n    childVNode.__b = newParentVNode.__b + 1; // Check if we find a corresponding element in oldChildren.\n    // If found, delete the array item by setting to `undefined`.\n    // We use `undefined`, as `null` is reserved for empty placeholders\n    // (holes).\n\n    oldVNode = oldChildren[i];\n\n    if (oldVNode === null || oldVNode && childVNode.key == oldVNode.key && childVNode.type === oldVNode.type) {\n      oldChildren[i] = undefined;\n    } else {\n      // Either oldVNode === undefined or oldChildrenLength > 0,\n      // so after this loop oldVNode == null or oldVNode is a valid value.\n      for (j = 0; j < oldChildrenLength; j++) {\n        oldVNode = oldChildren[j]; // If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n        // We always match by type (in either case).\n\n        if (oldVNode && childVNode.key == oldVNode.key && childVNode.type === oldVNode.type) {\n          oldChildren[j] = undefined;\n          break;\n        }\n\n        oldVNode = null;\n      }\n    }\n\n    oldVNode = oldVNode || EMPTY_OBJ; // Morph the old element into the new one, but don't append it to the dom yet\n\n    diff(parentDom, childVNode, oldVNode, globalContext, isSvg, excessDomChildren, commitQueue, oldDom, isHydrating);\n    newDom = childVNode.__e;\n\n    if ((j = childVNode.ref) && oldVNode.ref != j) {\n      if (!refs) refs = [];\n      if (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n      refs.push(j, childVNode.__c || newDom, childVNode);\n    }\n\n    if (newDom != null) {\n      if (firstChildDom == null) {\n        firstChildDom = newDom;\n      }\n\n      if (typeof childVNode.type == 'function' && childVNode.__k === oldVNode.__k) {\n        childVNode.__d = oldDom = reorderChildren(childVNode, oldDom, parentDom);\n      } else {\n        oldDom = placeChild(parentDom, childVNode, oldVNode, oldChildren, newDom, oldDom);\n      }\n\n      if (typeof newParentVNode.type == 'function') {\n        // Because the newParentVNode is Fragment-like, we need to set it's\n        // _nextDom property to the nextSibling of its last child DOM node.\n        //\n        // `oldDom` contains the correct value here because if the last child\n        // is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n        // If the last child is a DOM VNode, then oldDom will be set to that DOM\n        // node's nextSibling.\n        newParentVNode.__d = oldDom;\n      }\n    } else if (oldDom && oldVNode.__e == oldDom && oldDom.parentNode != parentDom) {\n      // The above condition is to handle null placeholders. See test in placeholder.test.js:\n      // `efficiently replace null placeholders in parent rerenders`\n      oldDom = getDomSibling(oldVNode);\n    }\n  }\n\n  newParentVNode.__e = firstChildDom; // Remove remaining oldChildren if there are any.\n\n  for (i = oldChildrenLength; i--;) {\n    if (oldChildren[i] != null) {\n      if (typeof newParentVNode.type == 'function' && oldChildren[i].__e != null && oldChildren[i].__e == newParentVNode.__d) {\n        // If the newParentVNode.__nextDom points to a dom node that is about to\n        // be unmounted, then get the next sibling of that vnode and set\n        // _nextDom to it\n        newParentVNode.__d = getLastDom(oldParentVNode).nextSibling;\n      }\n\n      unmount(oldChildren[i], oldChildren[i]);\n    }\n  } // Set refs only after unmount\n\n\n  if (refs) {\n    for (i = 0; i < refs.length; i++) {\n      applyRef(refs[i], refs[++i], refs[++i]);\n    }\n  }\n}\n\nfunction reorderChildren(childVNode, oldDom, parentDom) {\n  // Note: VNodes in nested suspended trees may be missing _children.\n  var c = childVNode.__k;\n  var tmp = 0;\n\n  for (; c && tmp < c.length; tmp++) {\n    var vnode = c[tmp];\n\n    if (vnode) {\n      // We typically enter this code path on sCU bailout, where we copy\n      // oldVNode._children to newVNode._children. If that is the case, we need\n      // to update the old children's _parent pointer to point to the newVNode\n      // (childVNode here).\n      vnode.__ = childVNode;\n\n      if (typeof vnode.type == 'function') {\n        oldDom = reorderChildren(vnode, oldDom, parentDom);\n      } else {\n        oldDom = placeChild(parentDom, vnode, vnode, c, vnode.__e, oldDom);\n      }\n    }\n  }\n\n  return oldDom;\n}\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\n\n\nfunction toChildArray(children, out) {\n  out = out || [];\n\n  if (children == null || typeof children == 'boolean') ; else if (Array.isArray(children)) {\n    children.some(function (child) {\n      toChildArray(child, out);\n    });\n  } else {\n    out.push(children);\n  }\n\n  return out;\n}\n\nfunction placeChild(parentDom, childVNode, oldVNode, oldChildren, newDom, oldDom) {\n  var nextDom;\n\n  if (childVNode.__d !== undefined) {\n    // Only Fragments or components that return Fragment like VNodes will\n    // have a non-undefined _nextDom. Continue the diff from the sibling\n    // of last DOM child of this child VNode\n    nextDom = childVNode.__d; // Eagerly cleanup _nextDom. We don't need to persist the value because\n    // it is only used by `diffChildren` to determine where to resume the diff after\n    // diffing Components and Fragments. Once we store it the nextDOM local var, we\n    // can clean up the property\n\n    childVNode.__d = undefined;\n  } else if (oldVNode == null || newDom != oldDom || newDom.parentNode == null) {\n    outer: if (oldDom == null || oldDom.parentNode !== parentDom) {\n      parentDom.appendChild(newDom);\n      nextDom = null;\n    } else {\n      // `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n      for (var sibDom = oldDom, j = 0; (sibDom = sibDom.nextSibling) && j < oldChildren.length; j += 1) {\n        if (sibDom == newDom) {\n          break outer;\n        }\n      }\n\n      parentDom.insertBefore(newDom, oldDom);\n      nextDom = oldDom;\n    }\n  } // If we have pre-calculated the nextDOM node, use it. Else calculate it now\n  // Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n  // See more detail in create-element.js:createVNode\n\n\n  if (nextDom !== undefined) {\n    oldDom = nextDom;\n  } else {\n    oldDom = newDom.nextSibling;\n  }\n\n  return oldDom;\n}\n/**\n * @param {import('../internal').VNode} vnode\n */\n\n\nfunction getLastDom(vnode) {\n  if (vnode.type == null || typeof vnode.type === 'string') {\n    return vnode.__e;\n  }\n\n  if (vnode.__k) {\n    for (var i = vnode.__k.length - 1; i >= 0; i--) {\n      var child = vnode.__k[i];\n\n      if (child) {\n        var lastDom = getLastDom(child);\n\n        if (lastDom) {\n          return lastDom;\n        }\n      }\n    }\n  }\n\n  return null;\n}\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\n\nfunction diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n  var i;\n\n  for (i in oldProps) {\n    if (i !== 'children' && i !== 'key' && !(i in newProps)) {\n      setProperty(dom, i, null, oldProps[i], isSvg);\n    }\n  }\n\n  for (i in newProps) {\n    if ((!hydrate || typeof newProps[i] == 'function') && i !== 'children' && i !== 'key' && i !== 'value' && i !== 'checked' && oldProps[i] !== newProps[i]) {\n      setProperty(dom, i, newProps[i], oldProps[i], isSvg);\n    }\n  }\n}\n\nfunction setStyle(style, key, value) {\n  if (key[0] === '-') {\n    style.setProperty(key, value == null ? '' : value);\n  } else if (value == null) {\n    style[key] = '';\n  } else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n    style[key] = value;\n  } else {\n    style[key] = value + 'px';\n  }\n}\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\n\n\nfunction setProperty(dom, name, value, oldValue, isSvg) {\n  var useCapture;\n\n  o: if (name === 'style') {\n    if (typeof value == 'string') {\n      dom.style.cssText = value;\n    } else {\n      if (typeof oldValue == 'string') {\n        dom.style.cssText = oldValue = '';\n      }\n\n      if (oldValue) {\n        for (name in oldValue) {\n          if (!(value && name in value)) {\n            setStyle(dom.style, name, '');\n          }\n        }\n      }\n\n      if (value) {\n        for (name in value) {\n          if (!oldValue || value[name] !== oldValue[name]) {\n            setStyle(dom.style, name, value[name]);\n          }\n        }\n      }\n    }\n  } // Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n  else if (name[0] === 'o' && name[1] === 'n') {\n    useCapture = name !== (name = name.replace(/Capture$/, '')); // Infer correct casing for DOM built-in events:\n\n    if (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);else name = name.slice(2);\n    if (!dom.l) dom.l = {};\n    dom.l[name + useCapture] = value;\n\n    if (value) {\n      if (!oldValue) {\n        var handler = useCapture ? eventProxyCapture : eventProxy;\n        dom.addEventListener(name, handler, useCapture);\n      }\n    } else {\n      var _handler = useCapture ? eventProxyCapture : eventProxy;\n\n      dom.removeEventListener(name, _handler, useCapture);\n    }\n  } else if (name !== 'dangerouslySetInnerHTML') {\n    if (isSvg) {\n      // Normalize incorrect prop usage for SVG:\n      // - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n      // - className --> class\n      name = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n    } else if (name !== 'width' && name !== 'height' && name !== 'href' && name !== 'list' && name !== 'form' && // Default value in browsers is `-1` and an empty string is\n    // cast to `0` instead\n    name !== 'tabIndex' && name !== 'download' && name in dom) {\n      try {\n        dom[name] = value == null ? '' : value; // labelled break is 1b smaller here than a return statement (sorry)\n\n        break o;\n      } catch (e) {}\n    } // ARIA-attributes have a different notion of boolean values.\n    // The value `false` is different from the attribute not\n    // existing on the DOM, so we can't remove it. For non-boolean\n    // ARIA-attributes we could treat false as a removal, but the\n    // amount of exceptions would cost us too many bytes. On top of\n    // that other VDOM frameworks also always stringify `false`.\n\n\n    if (typeof value === 'function') ; else if (value != null && (value !== false || name.indexOf('-') != -1)) {\n      dom.setAttribute(name, value);\n    } else {\n      dom.removeAttribute(name);\n    }\n  }\n}\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\n\nfunction eventProxy(e) {\n  return this.l[e.type + false](options.event ? options.event(e) : e);\n}\n\nfunction eventProxyCapture(e) {\n  return this.l[e.type + true](options.event ? options.event(e) : e);\n}\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\n\nfunction diff(parentDom, newVNode, oldVNode, globalContext, isSvg, excessDomChildren, commitQueue, oldDom, isHydrating) {\n  var tmp,\n      newType = newVNode.type; // When passing through createElement it assigns the object\n  // constructor as undefined. This to prevent JSON-injection.\n\n  if (newVNode.constructor !== undefined) return null; // If the previous diff bailed out, resume creating/hydrating.\n\n  if (oldVNode.__h != null) {\n    isHydrating = oldVNode.__h;\n    oldDom = newVNode.__e = oldVNode.__e; // if we resume, we want the tree to be \"unlocked\"\n\n    newVNode.__h = null;\n    excessDomChildren = [oldDom];\n  }\n\n  if (tmp = options.__b) tmp(newVNode);\n\n  try {\n    outer: if (typeof newType == 'function') {\n      var c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n      var newProps = newVNode.props; // Necessary for createContext api. Setting this property will pass\n      // the context value as `this.context` just for this component.\n\n      tmp = newType.contextType;\n      var provider = tmp && globalContext[tmp.__c];\n      var componentContext = tmp ? provider ? provider.props.value : tmp.__ : globalContext; // Get component and set it to `c`\n\n      if (oldVNode.__c) {\n        c = newVNode.__c = oldVNode.__c;\n        clearProcessingException = c.__ = c.__E;\n      } else {\n        // Instantiate the new component\n        if ('prototype' in newType && newType.prototype.render) {\n          // @ts-ignore The check above verifies that newType is suppose to be constructed\n          newVNode.__c = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n        } else {\n          // @ts-ignore Trust me, Component implements the interface we want\n          newVNode.__c = c = new Component(newProps, componentContext);\n          c.constructor = newType;\n          c.render = doRender;\n        }\n\n        if (provider) provider.sub(c);\n        c.props = newProps;\n        if (!c.state) c.state = {};\n        c.context = componentContext;\n        c.__n = globalContext;\n        isNew = c.__d = true;\n        c.__h = [];\n        c._sb = [];\n      } // Invoke getDerivedStateFromProps\n\n\n      if (c.__s == null) {\n        c.__s = c.state;\n      }\n\n      if (newType.getDerivedStateFromProps != null) {\n        if (c.__s == c.state) {\n          c.__s = assign({}, c.__s);\n        }\n\n        assign(c.__s, newType.getDerivedStateFromProps(newProps, c.__s));\n      }\n\n      oldProps = c.props;\n      oldState = c.state;\n      c.__v = newVNode; // Invoke pre-render lifecycle methods\n\n      if (isNew) {\n        if (newType.getDerivedStateFromProps == null && c.componentWillMount != null) {\n          c.componentWillMount();\n        }\n\n        if (c.componentDidMount != null) {\n          c.__h.push(c.componentDidMount);\n        }\n      } else {\n        if (newType.getDerivedStateFromProps == null && newProps !== oldProps && c.componentWillReceiveProps != null) {\n          c.componentWillReceiveProps(newProps, componentContext);\n        }\n\n        if (!c.__e && c.shouldComponentUpdate != null && c.shouldComponentUpdate(newProps, c.__s, componentContext) === false || newVNode.__v === oldVNode.__v) {\n          // More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n          if (newVNode.__v !== oldVNode.__v) {\n            // When we are dealing with a bail because of sCU we have to update\n            // the props, state and dirty-state.\n            // when we are dealing with strict-equality we don't as the child could still\n            // be dirtied see #3883\n            c.props = newProps;\n            c.state = c.__s;\n            c.__d = false;\n          } // In cases of bailing due to strict-equality we have to reset force as well\n\n\n          c.__e = false;\n          newVNode.__e = oldVNode.__e;\n          newVNode.__k = oldVNode.__k;\n\n          newVNode.__k.forEach(function (vnode) {\n            if (vnode) vnode.__ = newVNode;\n          });\n\n          for (var i = 0; i < c._sb.length; i++) {\n            c.__h.push(c._sb[i]);\n          }\n\n          c._sb = [];\n\n          if (c.__h.length) {\n            commitQueue.push(c);\n          }\n\n          break outer;\n        }\n\n        if (c.componentWillUpdate != null) {\n          c.componentWillUpdate(newProps, c.__s, componentContext);\n        }\n\n        if (c.componentDidUpdate != null) {\n          c.__h.push(function () {\n            c.componentDidUpdate(oldProps, oldState, snapshot);\n          });\n        }\n      }\n\n      c.context = componentContext;\n      c.props = newProps;\n      c.__P = parentDom;\n      var renderHook = options.__r,\n          count = 0;\n\n      if ('prototype' in newType && newType.prototype.render) {\n        c.state = c.__s;\n        c.__d = false;\n        if (renderHook) renderHook(newVNode);\n        tmp = c.render(c.props, c.state, c.context);\n\n        for (var _i = 0; _i < c._sb.length; _i++) {\n          c.__h.push(c._sb[_i]);\n        }\n\n        c._sb = [];\n      } else {\n        do {\n          c.__d = false;\n          if (renderHook) renderHook(newVNode);\n          tmp = c.render(c.props, c.state, c.context); // Handle setState called in render, see #2553\n\n          c.state = c.__s;\n        } while (c.__d && ++count < 25);\n      } // Handle setState called in render, see #2553\n\n\n      c.state = c.__s;\n\n      if (c.getChildContext != null) {\n        globalContext = assign(assign({}, globalContext), c.getChildContext());\n      }\n\n      if (!isNew && c.getSnapshotBeforeUpdate != null) {\n        snapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n      }\n\n      var isTopLevelFragment = tmp != null && tmp.type === Fragment && tmp.key == null;\n      var renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n      diffChildren(parentDom, Array.isArray(renderResult) ? renderResult : [renderResult], newVNode, oldVNode, globalContext, isSvg, excessDomChildren, commitQueue, oldDom, isHydrating);\n      c.base = newVNode.__e; // We successfully rendered this VNode, unset any stored hydration/bailout state:\n\n      newVNode.__h = null;\n\n      if (c.__h.length) {\n        commitQueue.push(c);\n      }\n\n      if (clearProcessingException) {\n        c.__E = c.__ = null;\n      }\n\n      c.__e = false;\n    } else if (excessDomChildren == null && newVNode.__v === oldVNode.__v) {\n      newVNode.__k = oldVNode.__k;\n      newVNode.__e = oldVNode.__e;\n    } else {\n      newVNode.__e = diffElementNodes(oldVNode.__e, newVNode, oldVNode, globalContext, isSvg, excessDomChildren, commitQueue, isHydrating);\n    }\n\n    if (tmp = options.diffed) tmp(newVNode);\n  } catch (e) {\n    newVNode.__v = null; // if hydrating or creating initial tree, bailout preserves DOM:\n\n    if (isHydrating || excessDomChildren != null) {\n      newVNode.__e = oldDom;\n      newVNode.__h = !!isHydrating;\n      excessDomChildren[excessDomChildren.indexOf(oldDom)] = null; // ^ could possibly be simplified to:\n      // excessDomChildren.length = 0;\n    }\n\n    options.__e(e, newVNode, oldVNode);\n  }\n}\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\n\nfunction commitRoot(commitQueue, root) {\n  if (options.__c) options.__c(root, commitQueue);\n  commitQueue.some(function (c) {\n    try {\n      // @ts-ignore Reuse the commitQueue variable here so the type changes\n      commitQueue = c.__h;\n      c.__h = [];\n      commitQueue.some(function (cb) {\n        // @ts-ignore See above ts-ignore on commitQueue\n        cb.call(c);\n      });\n    } catch (e) {\n      options.__e(e, c.__v);\n    }\n  });\n}\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\n\nfunction diffElementNodes(dom, newVNode, oldVNode, globalContext, isSvg, excessDomChildren, commitQueue, isHydrating) {\n  var oldProps = oldVNode.props;\n  var newProps = newVNode.props;\n  var nodeType = newVNode.type;\n  var i = 0; // Tracks entering and exiting SVG namespace when descending through the tree.\n\n  if (nodeType === 'svg') isSvg = true;\n\n  if (excessDomChildren != null) {\n    for (; i < excessDomChildren.length; i++) {\n      var child = excessDomChildren[i]; // if newVNode matches an element in excessDomChildren or the `dom`\n      // argument matches an element in excessDomChildren, remove it from\n      // excessDomChildren so it isn't later removed in diffChildren\n\n      if (child && 'setAttribute' in child === !!nodeType && (nodeType ? child.localName === nodeType : child.nodeType === 3)) {\n        dom = child;\n        excessDomChildren[i] = null;\n        break;\n      }\n    }\n  }\n\n  if (dom == null) {\n    if (nodeType === null) {\n      // @ts-ignore createTextNode returns Text, we expect PreactElement\n      return document.createTextNode(newProps);\n    }\n\n    if (isSvg) {\n      dom = document.createElementNS('http://www.w3.org/2000/svg', // @ts-ignore We know `newVNode.type` is a string\n      nodeType);\n    } else {\n      dom = document.createElement( // @ts-ignore We know `newVNode.type` is a string\n      nodeType, newProps.is && newProps);\n    } // we created a new parent, so none of the previously attached children can be reused:\n\n\n    excessDomChildren = null; // we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\n    isHydrating = false;\n  }\n\n  if (nodeType === null) {\n    // During hydration, we still have to split merged text from SSR'd HTML.\n    if (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n      dom.data = newProps;\n    }\n  } else {\n    // If excessDomChildren was not null, repopulate it with the current element's children:\n    excessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n    oldProps = oldVNode.props || EMPTY_OBJ;\n    var oldHtml = oldProps.dangerouslySetInnerHTML;\n    var newHtml = newProps.dangerouslySetInnerHTML; // During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n    // @TODO we should warn in debug mode when props don't match here.\n\n    if (!isHydrating) {\n      // But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n      // we should read the existing DOM attributes to diff them\n      if (excessDomChildren != null) {\n        oldProps = {};\n\n        for (i = 0; i < dom.attributes.length; i++) {\n          oldProps[dom.attributes[i].name] = dom.attributes[i].value;\n        }\n      }\n\n      if (newHtml || oldHtml) {\n        // Avoid re-applying the same '__html' if it did not changed between re-render\n        if (!newHtml || (!oldHtml || newHtml.__html != oldHtml.__html) && newHtml.__html !== dom.innerHTML) {\n          dom.innerHTML = newHtml && newHtml.__html || '';\n        }\n      }\n    }\n\n    diffProps(dom, newProps, oldProps, isSvg, isHydrating); // If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\n    if (newHtml) {\n      newVNode.__k = [];\n    } else {\n      i = newVNode.props.children;\n      diffChildren(dom, Array.isArray(i) ? i : [i], newVNode, oldVNode, globalContext, isSvg && nodeType !== 'foreignObject', excessDomChildren, commitQueue, excessDomChildren ? excessDomChildren[0] : oldVNode.__k && getDomSibling(oldVNode, 0), isHydrating); // Remove children that are not part of any vnode.\n\n      if (excessDomChildren != null) {\n        for (i = excessDomChildren.length; i--;) {\n          if (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n        }\n      }\n    } // (as above, don't diff props during hydration)\n\n\n    if (!isHydrating) {\n      if ('value' in newProps && (i = newProps.value) !== undefined && (i !== dom.value || nodeType === 'progress' && !i || nodeType === 'option' && i !== oldProps.value)) {\n        setProperty(dom, 'value', i, oldProps.value, false);\n      }\n\n      if ('checked' in newProps && (i = newProps.checked) !== undefined && i !== dom.checked) {\n        setProperty(dom, 'checked', i, oldProps.checked, false);\n      }\n    }\n  }\n\n  return dom;\n}\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\n\n\nfunction applyRef(ref, value, vnode) {\n  try {\n    if (typeof ref == 'function') ref(value);else ref.current = value;\n  } catch (e) {\n    options.__e(e, vnode);\n  }\n}\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\n\nfunction unmount(vnode, parentVNode, skipRemove) {\n  var r;\n  if (options.unmount) options.unmount(vnode);\n\n  if (r = vnode.ref) {\n    if (!r.current || r.current === vnode.__e) {\n      applyRef(r, null, parentVNode);\n    }\n  }\n\n  if ((r = vnode.__c) != null) {\n    if (r.componentWillUnmount) {\n      try {\n        r.componentWillUnmount();\n      } catch (e) {\n        options.__e(e, parentVNode);\n      }\n    }\n\n    r.base = r.__P = null;\n    vnode.__c = undefined;\n  }\n\n  if (r = vnode.__k) {\n    for (var i = 0; i < r.length; i++) {\n      if (r[i]) {\n        unmount(r[i], parentVNode, skipRemove || typeof vnode.type !== 'function');\n      }\n    }\n  }\n\n  if (!skipRemove && vnode.__e != null) {\n    removeNode(vnode.__e);\n  } // Must be set to `undefined` to properly clean up `_nextDom`\n  // for which `null` is a valid value. See comment in `create-element.js`\n\n\n  vnode.__ = vnode.__e = vnode.__d = undefined;\n}\n/** The `.render()` method for a PFC backing instance. */\n\nfunction doRender(props, state, context) {\n  return this.constructor(props, context);\n}\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\n\nfunction render(vnode, parentDom, replaceNode) {\n  if (options.__) options.__(vnode, parentDom); // We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n  // hydration mode or not by passing the `hydrate` function instead of a DOM\n  // element..\n\n  var isHydrating = typeof replaceNode === 'function'; // To be able to support calling `render()` multiple times on the same\n  // DOM node, we need to obtain a reference to the previous tree. We do\n  // this by assigning a new `_children` property to DOM nodes which points\n  // to the last rendered tree. By default this property is not present, which\n  // means that we are mounting a new tree for the first time.\n\n  var oldVNode = isHydrating ? null : replaceNode && replaceNode.__k || parentDom.__k;\n  vnode = (!isHydrating && replaceNode || parentDom).__k = createElement(Fragment, null, [vnode]); // List of effects that need to be called after diffing.\n\n  var commitQueue = [];\n  diff(parentDom, // Determine the new vnode tree and store it on the DOM element on\n  // our custom `_children` property.\n  vnode, oldVNode || EMPTY_OBJ, EMPTY_OBJ, parentDom.ownerSVGElement !== undefined, !isHydrating && replaceNode ? [replaceNode] : oldVNode ? null : parentDom.firstChild ? slice.call(parentDom.childNodes) : null, commitQueue, !isHydrating && replaceNode ? replaceNode : oldVNode ? oldVNode.__e : parentDom.firstChild, isHydrating); // Flush all queued effects\n\n  commitRoot(commitQueue, vnode);\n}\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\n\nfunction hydrate(vnode, parentDom) {\n  render(vnode, parentDom, hydrate);\n}\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Any additional arguments will be used as replacement children.\n * @returns {import('./internal').VNode}\n */\n\nfunction cloneElement(vnode, props, children) {\n  var normalizedProps = assign({}, vnode.props),\n      key,\n      ref,\n      i;\n\n  for (i in props) {\n    if (i == 'key') key = props[i];else if (i == 'ref') ref = props[i];else normalizedProps[i] = props[i];\n  }\n\n  if (arguments.length > 2) {\n    normalizedProps.children = arguments.length > 3 ? slice.call(arguments, 2) : children;\n  }\n\n  return createVNode(vnode.type, normalizedProps, key || vnode.key, ref || vnode.ref, null);\n}\n\nvar i = 0;\nfunction createContext(defaultValue, contextId) {\n  contextId = '__cC' + i++;\n  var context = {\n    __c: contextId,\n    __: defaultValue,\n\n    /** @type {import('./internal').FunctionComponent} */\n    Consumer: function Consumer(props, contextValue) {\n      // return props.children(\n      // \tcontext[contextId] ? context[contextId].props.value : defaultValue\n      // );\n      return props.children(contextValue);\n    },\n\n    /** @type {import('./internal').FunctionComponent} */\n    Provider: function Provider(props) {\n      if (!this.getChildContext) {\n        /** @type {import('./internal').Component[]} */\n        var subs = [];\n        var ctx = {};\n        ctx[contextId] = this;\n\n        this.getChildContext = function () {\n          return ctx;\n        };\n\n        this.shouldComponentUpdate = function (_props) {\n          if (this.props.value !== _props.value) {\n            // I think the forced value propagation here was only needed when `options.debounceRendering` was being bypassed:\n            // https://github.com/preactjs/preact/commit/4d339fb803bea09e9f198abf38ca1bf8ea4b7771#diff-54682ce380935a717e41b8bfc54737f6R358\n            // In those cases though, even with the value corrected, we're double-rendering all nodes.\n            // It might be better to just tell folks not to use force-sync mode.\n            // Currently, using `useContext()` in a class component will overwrite its `this.context` value.\n            // subs.some(c => {\n            // \tc.context = _props.value;\n            // \tenqueueRender(c);\n            // });\n            // subs.some(c => {\n            // \tc.context[contextId] = _props.value;\n            // \tenqueueRender(c);\n            // });\n            subs.some(function (c) {\n              c.__e = true;\n              enqueueRender(c);\n            });\n          }\n        };\n\n        this.sub = function (c) {\n          subs.push(c);\n          var old = c.componentWillUnmount;\n\n          c.componentWillUnmount = function () {\n            subs.splice(subs.indexOf(c), 1);\n            if (old) old.call(c);\n          };\n        };\n      }\n\n      return props.children;\n    }\n  }; // Devtools needs access to the context object when it\n  // encounters a Provider. This is necessary to support\n  // setting `displayName` on the context object instead\n  // of on the component itself. See:\n  // https://reactjs.org/docs/context.html#contextdisplayname\n\n  return context.Provider.__ = context.Consumer.contextType = context;\n}\n\nexport { Component, Fragment, cloneElement, createContext, createElement, createRef, createElement as h, hydrate, isValidElement, options, render, toChildArray };\n//# sourceMappingURL=preact.module.js.map\n","import{options as n}from\"preact\";var t,r,u,i,o=0,f=[],c=[],e=n.__b,a=n.__r,v=n.diffed,l=n.__c,m=n.unmount;function d(t,u){n.__h&&n.__h(r,t,o||u),o=0;var i=r.__H||(r.__H={__:[],__h:[]});return t>=i.__.length&&i.__.push({__V:c}),i.__[t]}function h(n){return o=1,s(B,n)}function s(n,u,i){var o=d(t++,2);if(o.t=n,!o.__c&&(o.__=[i?i(u):B(void 0,u),function(n){var t=o.__N?o.__N[0]:o.__[0],r=o.t(t,n);t!==r&&(o.__N=[r,o.__[1]],o.__c.setState({}))}],o.__c=r,!r.u)){var f=function(n,t,r){if(!o.__c.__H)return!0;var u=o.__c.__H.__.filter(function(n){return n.__c});if(u.every(function(n){return!n.__N}))return!c||c.call(this,n,t,r);var i=!1;return u.forEach(function(n){if(n.__N){var t=n.__[0];n.__=n.__N,n.__N=void 0,t!==n.__[0]&&(i=!0)}}),!(!i&&o.__c.props===n)&&(!c||c.call(this,n,t,r))};r.u=!0;var c=r.shouldComponentUpdate,e=r.componentWillUpdate;r.componentWillUpdate=function(n,t,r){if(this.__e){var u=c;c=void 0,f(n,t,r),c=u}e&&e.call(this,n,t,r)},r.shouldComponentUpdate=f}return o.__N||o.__}function p(u,i){var o=d(t++,3);!n.__s&&z(o.__H,i)&&(o.__=u,o.i=i,r.__H.__h.push(o))}function y(u,i){var o=d(t++,4);!n.__s&&z(o.__H,i)&&(o.__=u,o.i=i,r.__h.push(o))}function _(n){return o=5,F(function(){return{current:n}},[])}function A(n,t,r){o=6,y(function(){return\"function\"==typeof n?(n(t()),function(){return n(null)}):n?(n.current=t(),function(){return n.current=null}):void 0},null==r?r:r.concat(n))}function F(n,r){var u=d(t++,7);return z(u.__H,r)?(u.__V=n(),u.i=r,u.__h=n,u.__V):u.__}function T(n,t){return o=8,F(function(){return n},t)}function q(n){var u=r.context[n.__c],i=d(t++,9);return i.c=n,u?(null==i.__&&(i.__=!0,u.sub(r)),u.props.value):n.__}function x(t,r){n.useDebugValue&&n.useDebugValue(r?r(t):t)}function P(n){var u=d(t++,10),i=h();return u.__=n,r.componentDidCatch||(r.componentDidCatch=function(n,t){u.__&&u.__(n,t),i[1](n)}),[i[0],function(){i[1](void 0)}]}function V(){var n=d(t++,11);if(!n.__){for(var u=r.__v;null!==u&&!u.__m&&null!==u.__;)u=u.__;var i=u.__m||(u.__m=[0,0]);n.__=\"P\"+i[0]+\"-\"+i[1]++}return n.__}function b(){for(var t;t=f.shift();)if(t.__P&&t.__H)try{t.__H.__h.forEach(k),t.__H.__h.forEach(w),t.__H.__h=[]}catch(r){t.__H.__h=[],n.__e(r,t.__v)}}n.__b=function(n){r=null,e&&e(n)},n.__r=function(n){a&&a(n),t=0;var i=(r=n.__c).__H;i&&(u===r?(i.__h=[],r.__h=[],i.__.forEach(function(n){n.__N&&(n.__=n.__N),n.__V=c,n.__N=n.i=void 0})):(i.__h.forEach(k),i.__h.forEach(w),i.__h=[])),u=r},n.diffed=function(t){v&&v(t);var o=t.__c;o&&o.__H&&(o.__H.__h.length&&(1!==f.push(o)&&i===n.requestAnimationFrame||((i=n.requestAnimationFrame)||j)(b)),o.__H.__.forEach(function(n){n.i&&(n.__H=n.i),n.__V!==c&&(n.__=n.__V),n.i=void 0,n.__V=c})),u=r=null},n.__c=function(t,r){r.some(function(t){try{t.__h.forEach(k),t.__h=t.__h.filter(function(n){return!n.__||w(n)})}catch(u){r.some(function(n){n.__h&&(n.__h=[])}),r=[],n.__e(u,t.__v)}}),l&&l(t,r)},n.unmount=function(t){m&&m(t);var r,u=t.__c;u&&u.__H&&(u.__H.__.forEach(function(n){try{k(n)}catch(n){r=n}}),u.__H=void 0,r&&n.__e(r,u.__v))};var g=\"function\"==typeof requestAnimationFrame;function j(n){var t,r=function(){clearTimeout(u),g&&cancelAnimationFrame(t),setTimeout(n)},u=setTimeout(r,100);g&&(t=requestAnimationFrame(r))}function k(n){var t=r,u=n.__c;\"function\"==typeof u&&(n.__c=void 0,u()),r=t}function w(n){var t=r;n.__c=n.__(),r=t}function z(n,t){return!n||n.length!==t.length||t.some(function(t,r){return t!==n[r]})}function B(n,t){return\"function\"==typeof t?t(n):t}export{T as useCallback,q as useContext,x as useDebugValue,p as useEffect,P as useErrorBoundary,V as useId,A as useImperativeHandle,y as useLayoutEffect,F as useMemo,s as useReducer,_ as useRef,h as useState};\n//# sourceMappingURL=hooks.module.js.map\n","/* Borrowed from https://github.com/ai/nanoid/blob/3.0.2/non-secure/index.js\n\nThe MIT License (MIT)\n\nCopyright 2017 Andrey Sitnik <andrey@sitnik.ru>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. */\n\n// This alphabet uses `A-Za-z0-9_-` symbols.\n// The order of characters is optimized for better gzip and brotli compression.\n// References to the same file (works both for gzip and brotli):\n// `'use`, `andom`, and `rict'`\n// References to the brotli default dictionary:\n// `-26T`, `1983`, `40px`, `75px`, `bush`, `jack`, `mind`, `very`, and `wolf`\nlet urlAlphabet = \"useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict\";\n\nfunction nanoid(size = 21) {\n    let id = \"\";\n    // A compact alternative for `for (var i = 0; i < step; i++)`.\n    let i = size;\n    while (i--) {\n        // `| 0` is more compact and faster than `Math.floor()`.\n        id += urlAlphabet[(Math.random() * 64) | 0];\n    }\n    return id;\n}\nlet todos = [];\n\nexport default function TodoModel(sub) {\n    const onChanges = [sub];\n\n    function inform() {\n        onChanges.forEach((cb) => cb());\n    }\n\n    function addItem(title) {\n        todos = todos.concat({\n            id: nanoid(),\n            title,\n            completed: false,\n        });\n        inform();\n    }\n\n    function toggleItem(todoToToggle) {\n        todos = todos.map((todo) => todo !== todoToToggle ? todo : { ...todo, completed: !todo.completed });\n        inform();\n    }\n\n    function removeItem(todo) {\n        todos = todos.filter((t) => t !== todo);\n        inform();\n    }\n\n    function updateItem(todoToSave, title) {\n        todos = todos.map((todo) => todo !== todoToSave ? todo : { ...todo, title });\n        inform();\n    }\n\n    function toggleAll(completed) {\n        todos = todos.map((todo) => ({ ...todo, completed }));\n        inform();\n    }\n\n    function clearCompleted() {\n        todos = todos.filter((todo) => !todo.completed);\n        inform();\n    }\n\n    function getTodos() {\n        return [...todos];\n    }\n\n    return {\n        addItem,\n        toggleAll,\n        toggleItem,\n        removeItem,\n        updateItem,\n        clearCompleted,\n        getTodos,\n    };\n}\n","import { h } from \"preact\";\n\nexport default function TodoHeader({ onKeyDown }) {\n    return (\n        <header class=\"header\">\n            <h1>todos</h1>\n            <input class=\"new-todo\" placeholder=\"What needs to be done?\" onKeyDown={onKeyDown} autoFocus />\n        </header>\n    );\n}\n","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import cx from \"classnames\";\nimport { h } from \"preact\";\nimport { useState, useEffect, useRef } from \"preact/hooks\";\nexport default function TodoItem({ onSave, onRemove, onToggle, todo }) {\n    const [editing, setEditing] = useState(false);\n    const inputRef = useRef(null);\n\n    /**\n     * useEffect keeps track of the 'editing' state change.\n     * If the input field is present, we set focus programmatically.\n     */\n    useEffect(() => {\n        if (inputRef.current) {\n            inputRef.current.focus();\n            inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n        }\n    }, [editing]);\n\n    function handleSubmit(e) {\n        const val = e.target.value.trim();\n        if (val) {\n            onSave(todo, val);\n            setEditing(false);\n        } else {\n            onRemove(todo);\n        }\n    }\n\n    function handleKeyDown(e) {\n        if (e.key === \"Escape\")\n            setEditing(false);\n        else if (e.key === \"Enter\")\n            handleSubmit(e);\n    }\n\n    function handleDoubleClick() {\n        setEditing(true);\n    }\n\n    function handleToggle(e) {\n        onToggle(todo);\n        e.preventDefault();\n    }\n\n    function handleRemove() {\n        onRemove(todo);\n    }\n\n    return (\n        <li class={cx({ completed: todo.completed, editing })}>\n            <div class=\"view\">\n                <input class=\"toggle\" type=\"checkbox\" checked={todo.completed} onChange={handleToggle} />\n                <label onDblClick={handleDoubleClick}>{todo.title}</label>\n                <button class=\"destroy\" onClick={handleRemove} />\n            </div>\n            {editing\n                ? <div class=\"input-container\">\n                    <input class=\"edit\" id=\"edit-todo-input\" ref={inputRef} onBlur={handleSubmit} onKeyDown={handleKeyDown} defaultValue={todo.title} />\n                    <label class=\"visually-hidden\" htmlFor=\"edit-todo-input\">\n                        Edit Todo Input{\" \"}\n                    </label>\n                </div>\n                : null}\n        </li>\n    );\n}\n","export const FILTERS = {\n    all: (todo) => true,\n    active: (todo) => !todo.completed,\n    completed: (todo) => todo.completed,\n};\n","import { h } from \"preact\";\n\nimport TodoItem from \"./item\";\nimport { FILTERS } from \"./utils\";\n\nexport default function TodoMain({ onChange, onToggle, onRemove, onSave, todos, route }) {\n    const visibleTodos = todos.filter(FILTERS[route]);\n    const activeTodoCount = todos.filter(FILTERS[\"active\"]).length;\n\n    return (\n        <section class=\"main\">\n            <div class=\"toggle-all-container\">\n                <input class=\"toggle-all\" type=\"checkbox\" checked={activeTodoCount === 0} onChange={onChange} />\n                <label class=\"toggle-all-label\" htmlFor=\"toggle-all\">\n                    Toggle All Input\n                </label>\n            </div>\n            <ul class=\"todo-list\">\n                {visibleTodos.map((todo) =>\n                    <TodoItem key={todo.id} todo={todo} onToggle={onToggle} onRemove={onRemove} onSave={onSave} />\n                )}\n            </ul>\n        </section>\n    );\n}\n","import cx from \"classnames\";\nimport { h } from \"preact\";\n\nexport default function TodoFooter({ todos, route, onClearCompleted }) {\n    const activeTodoCount = todos.filter((todo) => !todo.completed).length;\n    const completedTodoCount = todos.length - activeTodoCount;\n\n    return (\n        <footer class=\"footer\">\n            <span class=\"todo-count\">{`${activeTodoCount} ${activeTodoCount === 1 ? \"item\" : \"items\"} left!`}</span>\n            <ul class=\"filters\">\n                <li>\n                    <a href=\"#/\" class={cx({ selected: route === \"all\" })}>\n                        All\n                    </a>\n                </li>{\" \"}\n                <li>\n                    <a href=\"#/active\" class={cx({ selected: route === \"active\" })}>\n                        Active\n                    </a>\n                </li>{\" \"}\n                <li>\n                    <a href=\"#/completed\" class={cx({ selected: route === \"completed\" })}>\n                        Completed\n                    </a>\n                </li>\n            </ul>\n            {completedTodoCount > 0\n                && <button class=\"clear-completed\" onClick={onClearCompleted}>\n                    Clear completed\n                </button>\n            }\n        </footer>\n    );\n}\n","import { h } from \"preact\";\nimport { useEffect, useState } from \"preact/hooks\";\n\nimport TodoModel from \"./model\";\nimport TodoHeader from \"./header\";\nimport TodoMain from \"./main.js\";\nimport TodoFooter from \"./footer\";\nimport { FILTERS } from \"./utils\";\n\nconst getRoute = () => {\n    let route = String(location.hash || \"\")\n        .split(\"/\")\n        .pop();\n\n    if (!FILTERS[route])\n        route = \"all\";\n\n    return route;\n};\n\nexport default function App() {\n    const [, setUpdatedAt] = useState(Date.now());\n    const [route, setRoute] = useState(\"all\");\n\n    /**\n     * The udpate function gets called from the model after changes are made.\n     * This sets state in the app component, which forces a re-render.\n     *\n     */\n    function update() {\n        setUpdatedAt(Date.now());\n    }\n\n    const model = TodoModel(update);\n\n    /**\n     * useEffect with an empty dependency array runs on the initial mount of the component.\n     * Since it doesn't depend on state or prop changes, it will only run once.\n     */\n    useEffect(() => {\n        function handleHashChange() {\n            setRoute(getRoute());\n        }\n\n        addEventListener(\"hashchange\", handleHashChange);\n        handleHashChange();\n    }, []);\n\n    function handleKeyDown(e) {\n        if (e.key === \"Enter\") {\n            const value = e.target.value.trim();\n\n            if (value) {\n                model.addItem(value);\n                e.target.value = \"\";\n            }\n        }\n    }\n\n    function toggleAll(e) {\n        model.toggleAll(e.target.checked);\n    }\n\n    return (\n        <div>\n            <TodoHeader onKeyDown={handleKeyDown} />\n            {model.getTodos().length > 0\n                ? <div>\n                    <TodoMain todos={model.getTodos()} route={route} onChange={toggleAll} onToggle={model.toggleItem} onRemove={model.removeItem} onSave={model.updateItem} />\n                    <TodoFooter todos={model.getTodos()} route={route} onClearCompleted={model.clearCompleted} />\n                </div>\n                : null}\n        </div>\n    );\n}\n","import { h, render } from \"preact\";\nimport App from \"./app/app\";\nimport \"todomvc-app-css/index.css\";\nimport \"./styles.css\";\n\nrender(<App />, document.querySelector(\".todoapp\"));\n"],"names":["EMPTY_OBJ","EMPTY_ARR","IS_NON_DIMENSIONAL","t","r","u","i","o","f","c","e","n","__b","a","__r","v","diffed","l","__c","m","unmount","d","__h","__H","__","length","push","__V","h","s","B","__N","setState","filter","every","call","forEach","props","shouldComponentUpdate","componentWillUpdate","__e","p","__s","z","_","F","current","b","shift","__P","k","w","__v","requestAnimationFrame","j","some","g","clearTimeout","cancelAnimationFrame","setTimeout","urlAlphabet","nanoid","size","arguments","undefined","id","Math","random","todos","TodoModel","sub","onChanges","inform","cb","addItem","title","concat","completed","toggleItem","todoToToggle","map","todo","removeItem","updateItem","todoToSave","toggleAll","clearCompleted","getTodos","TodoHeader","_ref","onKeyDown","class","placeholder","autoFocus","hasOwn","hasOwnProperty","classNames","classes","arg","argType","Array","isArray","inner","apply","toString","Object","prototype","includes","key","join","module","exports","default","window","TodoItem","onSave","onRemove","onToggle","editing","setEditing","useState","inputRef","useRef","useEffect","focus","setSelectionRange","value","handleSubmit","val","target","trim","handleKeyDown","handleDoubleClick","handleToggle","preventDefault","handleRemove","cx","type","checked","onChange","onDblClick","onClick","ref","onBlur","defaultValue","htmlFor","FILTERS","all","active","TodoMain","route","visibleTodos","activeTodoCount","TodoFooter","onClearCompleted","completedTodoCount","href","selected","getRoute","String","location","hash","split","pop","App","setUpdatedAt","Date","now","setRoute","update","model","handleHashChange","addEventListener","render","document","querySelector"],"mappings":"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","x_google_ignoreList":[0,1,4]}