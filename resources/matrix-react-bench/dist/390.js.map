{"version":3,"file":"390.js","mappings":";;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAqCO,MAAMA,cAA+B,GAAG;EAC3CC,QAAQ,EAAE,GAAG;EACbC,KAAK,EAAE,CAAC;EACRC,aAAa,EAAE,EAAE;EACjBC,KAAK,EAAE,GAAG;EACVC,QAAQ,EAAE;AACd,CAAC;AAEc,MAAMC,QAAQ,CAA0B;EAGnDC,WAAWA,CAACC,OAA+B,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA;IAAAA,eAAA,kBAIM,IAAI;IAAAA,eAAA,iCACtBC,MAAM,CAACC,qBAAqB;IAAAF,eAAA,iBAC5C,CAAC,kBAAkB,EAAE,kBAAkB,EAAE,iBAAiB,EACvE,mBAAmB,EAAE,kBAAkB,EAAE,mBAAmB,EAC5D,mBAAmB,EAAE,mBAAmB,EAAE,kBAAkB,EAC5D,kBAAkB,EAAE,kBAAkB,EAAE,iBAAiB,CAAC;IAAAA,eAAA,wBAEtCG,IAAI,CAACC,GAAG,CAAC,CAAC;IAAAJ,eAAA,oBACW,EAAE;IAAAA,eAAA,oBAC3B,CAAC;IAAAA,eAAA;IAAAA,eAAA,gBAIN,gBAAOK,MAAyB,EAAqB;MAAA,IAAnBC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;MAC3D,IAAI,CAACF,MAAM,EAAE;QACT;MACJ;MACAN,KAAI,CAACW,OAAO,GAAGL,MAAM,CAACM,UAAU,CAAC,IAAI,CAAC;MACtCZ,KAAI,CAACa,SAAS,GAAG,EAAE;MACnB,MAAMC,KAAK,GAAGd,KAAI,CAACD,OAAO,CAACP,QAAQ;MACnC,OAAOQ,KAAI,CAACa,SAAS,CAACJ,MAAM,GAAGK,KAAK,EAAE;QAClCd,KAAI,CAACa,SAAS,CAACE,IAAI,CAACf,KAAI,CAACgB,aAAa,CAAC,CAAC,CAAC,EAAsBV,MAAM,CAACW,KAAK,EAAEX,MAAM,CAACY,MAAM,CAAC,CAAC;MAChG;MACAlB,KAAI,CAACmB,SAAS,GAAG,IAAI;MACrBnB,KAAI,CAACoB,YAAY,CAAC,CAAC;MACnB,IAAIb,OAAO,EAAE;QACTL,MAAM,CAACmB,UAAU,CAACrB,KAAI,CAACsB,IAAI,EAAEf,OAAO,CAAC;MACzC;IACJ,CAAC;IAAAN,eAAA,eAEa,YAAY;MACtB,IAAI,CAACkB,SAAS,GAAG,KAAK;IAC1B,CAAC;IAAAlB,eAAA,wBAEuB,CAACsB,QAA0B,EAAEN,KAAa,EAAEC,MAAc,KAAuB;MACrGK,QAAQ,CAACC,KAAK,GAAG,IAAI,CAACC,MAAM,CAAEC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,IAAI,CAACF,MAAM,CAAChB,MAAM,GAAI,CAAC,CAAC,IAAI,IAAI,CAACV,OAAO,CAACJ,KAAK,GAAG,GAAG,CAAC;MACnG,IAAI,IAAI,CAACI,OAAO,CAACH,QAAQ,EAAE;QACvB2B,QAAQ,CAACK,MAAM,GAAG,IAAI,CAACH,MAAM,CAAEC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,IAAI,CAACF,MAAM,CAAChB,MAAM,GAAI,CAAC,CAAC,IAAI,IAAI,CAACV,OAAO,CAACJ,KAAK,GAAG,GAAG,CAAC;MACxG,CAAC,MAAM;QACH4B,QAAQ,CAACK,MAAM,GAAGL,QAAQ,CAACC,KAAK;MACpC;MACAD,QAAQ,CAACM,CAAC,GAAGH,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGV,KAAK;MAClCM,QAAQ,CAACO,CAAC,GAAGJ,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAACT,MAAM;MACpCK,QAAQ,CAACQ,QAAQ,GAAGL,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;MAC1CJ,QAAQ,CAACS,IAAI,GAAGN,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE;MACnCJ,QAAQ,CAACU,kBAAkB,GAAGP,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI;MACzDJ,QAAQ,CAACW,SAAS,GAAGR,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGD,IAAI,CAACS,EAAE;MAC5C,OAAOZ,QAAQ;IACnB,CAAC;IAAAtB,eAAA,uBAEsB,MAAY;MAC/B,IAAI,CAAC,IAAI,CAACU,OAAO,IAAI,CAAC,IAAI,CAACA,OAAO,CAACL,MAAM,EAAE;QACvC;MACJ;MACA,IAAI,IAAI,CAACO,SAAS,CAACJ,MAAM,KAAK,CAAC,EAAE;QAC7B,IAAI,CAACE,OAAO,CAACyB,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAACzB,OAAO,CAACL,MAAM,CAACW,KAAK,EAAE,IAAI,CAACN,OAAO,CAACL,MAAM,CAACY,MAAM,CAAC;MACvF,CAAC,MAAM;QACH,MAAMb,GAAG,GAAGD,IAAI,CAACC,GAAG,CAAC,CAAC;QACtB,MAAMgC,KAAK,GAAGhC,GAAG,GAAG,IAAI,CAACiC,aAAa;QACtC,IAAI,CAAC,IAAI,CAACC,sBAAsB,IAAIF,KAAK,GAAG,IAAI,CAACtC,OAAO,CAACL,aAAa,EAAE;UACpE,IAAI,CAACiB,OAAO,CAACyB,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAACzB,OAAO,CAACL,MAAM,CAACW,KAAK,EAAE,IAAI,CAACN,OAAO,CAACL,MAAM,CAACY,MAAM,CAAC;UACnF,IAAI,CAACsB,eAAe,CAAC,CAAC;UACtB,IAAI,CAACC,aAAa,CAAC,IAAI,CAAC9B,OAAO,CAAC;UAChC,IAAI,CAAC2B,aAAa,GAAGjC,GAAG,GAAIgC,KAAK,GAAG,IAAI,CAACtC,OAAO,CAACL,aAAc;QACnE;QACAS,qBAAqB,CAAC,IAAI,CAACiB,YAAY,CAAC;MAC5C;IACJ,CAAC;IAAAnB,eAAA,wBAEwBU,OAAiC,IAAW;MACjE,IAAI,CAAC,IAAI,CAACA,OAAO,IAAI,CAAC,IAAI,CAACA,OAAO,CAACL,MAAM,EAAE;QACvC;MACJ;MACA,IAAIuB,CAAC;MAAE,IAAIa,EAAE;MAAE,IAAIC,EAAE;MACrB,KAAK,MAAMpB,QAAQ,IAAI,IAAI,CAACV,SAAS,EAAE;QACnC,IAAI,CAACF,OAAO,CAACiC,SAAS,CAAC,CAAC;QACxBjC,OAAO,CAACkC,SAAS,GAAGtB,QAAQ,CAACQ,QAAQ;QACrCW,EAAE,GAAGnB,QAAQ,CAACM,CAAC,GAAGN,QAAQ,CAACS,IAAI;QAC/BH,CAAC,GAAGa,EAAE,GAAGnB,QAAQ,CAACQ,QAAQ,GAAG,CAAC;QAC9BY,EAAE,GAAGpB,QAAQ,CAACO,CAAC,GAAGP,QAAQ,CAACS,IAAI,GAAGT,QAAQ,CAACQ,QAAQ,GAAG,CAAC;QACvD,IAAI,IAAI,CAAChC,OAAO,CAACH,QAAQ,EAAE;UACvB,MAAMA,QAAQ,GAAGe,OAAO,CAACmC,oBAAoB,CAACjB,CAAC,EAAEN,QAAQ,CAACO,CAAC,EAAEY,EAAE,EAAEC,EAAE,CAAC;UACpE/C,QAAQ,CAACmD,YAAY,CAAC,CAAC,EAAExB,QAAQ,CAACC,KAAK,CAAC;UACxC5B,QAAQ,CAACmD,YAAY,CAAC,GAAG,EAAExB,QAAQ,CAACK,MAAM,CAAC;UAC3CjB,OAAO,CAACqC,WAAW,GAAGpD,QAAQ;QAClC,CAAC,MAAM;UACHe,OAAO,CAACqC,WAAW,GAAGzB,QAAQ,CAACC,KAAK;QACxC;QACAb,OAAO,CAACsC,MAAM,CAACpB,CAAC,EAAEN,QAAQ,CAACO,CAAC,CAAC;QAC7BnB,OAAO,CAACuC,MAAM,CAACR,EAAE,EAAEC,EAAE,CAAC;QACtBhC,OAAO,CAACwC,MAAM,CAAC,CAAC;MACpB;IACJ,CAAC;IAAAlD,eAAA,0BAEyB,MAAM;MAC5B,IAAI,CAAC,IAAI,CAACU,OAAO,IAAI,CAAC,IAAI,CAACA,OAAO,CAACL,MAAM,EAAE;QACvC;MACJ;MACA,MAAMW,KAAK,GAAG,IAAI,CAACN,OAAO,CAACL,MAAM,CAACW,KAAK;MACvC,MAAMC,MAAM,GAAG,IAAI,CAACP,OAAO,CAACL,MAAM,CAACY,MAAM;MACzC,IAAIK,QAA0B;MAC9B,IAAI,CAAC6B,SAAS,IAAI,IAAI;MACtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACxC,SAAS,CAACJ,MAAM,EAAE4C,CAAC,EAAE,EAAE;QAC5C9B,QAAQ,GAAG,IAAI,CAACV,SAAS,CAACwC,CAAC,CAAC;QAC5B,IAAI,CAAC,IAAI,CAAClC,SAAS,IAAII,QAAQ,CAACO,CAAC,GAAG,CAAC,EAAE,EAAE;UACrCP,QAAQ,CAACO,CAAC,GAAGZ,MAAM,GAAG,GAAG;QAC7B,CAAC,MAAM;UACHK,QAAQ,CAACW,SAAS,IAAIX,QAAQ,CAACU,kBAAkB;UACjDV,QAAQ,CAACM,CAAC,IAAIH,IAAI,CAAC4B,GAAG,CAAC,IAAI,CAACF,SAAS,CAAC,GAAG,GAAG;UAC5C7B,QAAQ,CAACO,CAAC,IAAI,CAACJ,IAAI,CAAC6B,GAAG,CAAC,IAAI,CAACH,SAAS,CAAC,GAAG7B,QAAQ,CAACQ,QAAQ,GAAG,IAAI,CAAChC,OAAO,CAACN,KAAK,IAAI,GAAG;UACvF8B,QAAQ,CAACS,IAAI,GAAGN,IAAI,CAAC4B,GAAG,CAAC/B,QAAQ,CAACW,SAAS,CAAC,GAAG,EAAE;QACrD;QACA,IAAIX,QAAQ,CAACM,CAAC,GAAGZ,KAAK,GAAG,EAAE,IAAIM,QAAQ,CAACM,CAAC,GAAG,CAAC,EAAE,IAAIN,QAAQ,CAACO,CAAC,GAAGZ,MAAM,EAAE;UACpE,IAAI,IAAI,CAACC,SAAS,IAAI,IAAI,CAACN,SAAS,CAACJ,MAAM,IAAI,IAAI,CAACV,OAAO,CAACP,QAAQ,EAAE;YAClE,IAAI,CAACwB,aAAa,CAACO,QAAQ,EAAEN,KAAK,EAAEC,MAAM,CAAC;UAC/C,CAAC,MAAM;YACH,IAAI,CAACL,SAAS,CAAC2C,MAAM,CAACH,CAAC,EAAE,CAAC,CAAC;YAC3BA,CAAC,EAAE;UACP;QACJ;MACJ;IACJ,CAAC;IA5HG,IAAI,CAACtD,OAAO,GAAA0D,aAAA,CAAAA,aAAA,KAAQlE,cAAc,GAAKQ,OAAO,CAAE;EACpD;AA4HJ","sources":["webpack://matrix-shell-bench/./node_modules/matrix-react-sdk/src/effects/confetti/index.ts"],"sourcesContent":["/*\n Copyright 2020 Nurjin Jafar\n Copyright 2020 Nordeck IT + Consulting GmbH.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n */\nimport ICanvasEffect from '../ICanvasEffect';\n\nexport type ConfettiOptions = {\n    /**\n     * max confetti count\n     */\n    maxCount: number;\n    /**\n     * particle animation speed\n     */\n    speed: number;\n    /**\n     * the confetti animation frame interval in milliseconds\n     */\n    frameInterval: number;\n    /**\n     * the alpha opacity of the confetti (between 0 and 1, where 1 is opaque and 0 is invisible)\n     */\n    alpha: number;\n    /**\n     * use gradient instead of solid particle color\n     */\n    gradient: boolean;\n};\n\ntype ConfettiParticle = {\n    color: string;\n    color2: string;\n    x: number;\n    y: number;\n    diameter: number;\n    tilt: number;\n    tiltAngleIncrement: number;\n    tiltAngle: number;\n};\n\nexport const DefaultOptions: ConfettiOptions = {\n    maxCount: 150,\n    speed: 3,\n    frameInterval: 15,\n    alpha: 1.0,\n    gradient: false,\n};\n\nexport default class Confetti implements ICanvasEffect {\n    private readonly options: ConfettiOptions;\n\n    constructor(options: { [key: string]: any }) {\n        this.options = { ...DefaultOptions, ...options };\n    }\n\n    private context: CanvasRenderingContext2D | null = null;\n    private supportsAnimationFrame = window.requestAnimationFrame;\n    private colors = ['rgba(30,144,255,', 'rgba(107,142,35,', 'rgba(255,215,0,',\n        'rgba(255,192,203,', 'rgba(106,90,205,', 'rgba(173,216,230,',\n        'rgba(238,130,238,', 'rgba(152,251,152,', 'rgba(70,130,180,',\n        'rgba(244,164,96,', 'rgba(210,105,30,', 'rgba(220,20,60,'];\n\n    private lastFrameTime = Date.now();\n    private particles: Array<ConfettiParticle> = [];\n    private waveAngle = 0;\n\n    public isRunning: boolean;\n\n    public start = async (canvas: HTMLCanvasElement, timeout = 3000) => {\n        if (!canvas) {\n            return;\n        }\n        this.context = canvas.getContext('2d');\n        this.particles = [];\n        const count = this.options.maxCount;\n        while (this.particles.length < count) {\n            this.particles.push(this.resetParticle({} as ConfettiParticle, canvas.width, canvas.height));\n        }\n        this.isRunning = true;\n        this.runAnimation();\n        if (timeout) {\n            window.setTimeout(this.stop, timeout);\n        }\n    };\n\n    public stop = async () => {\n        this.isRunning = false;\n    };\n\n    private resetParticle = (particle: ConfettiParticle, width: number, height: number): ConfettiParticle => {\n        particle.color = this.colors[(Math.random() * this.colors.length) | 0] + (this.options.alpha + ')');\n        if (this.options.gradient) {\n            particle.color2 = this.colors[(Math.random() * this.colors.length) | 0] + (this.options.alpha + ')');\n        } else {\n            particle.color2 = particle.color;\n        }\n        particle.x = Math.random() * width;\n        particle.y = Math.random() * -height;\n        particle.diameter = Math.random() * 10 + 5;\n        particle.tilt = Math.random() * -10;\n        particle.tiltAngleIncrement = Math.random() * 0.07 + 0.05;\n        particle.tiltAngle = Math.random() * Math.PI;\n        return particle;\n    };\n\n    private runAnimation = (): void => {\n        if (!this.context || !this.context.canvas) {\n            return;\n        }\n        if (this.particles.length === 0) {\n            this.context.clearRect(0, 0, this.context.canvas.width, this.context.canvas.height);\n        } else {\n            const now = Date.now();\n            const delta = now - this.lastFrameTime;\n            if (!this.supportsAnimationFrame || delta > this.options.frameInterval) {\n                this.context.clearRect(0, 0, this.context.canvas.width, this.context.canvas.height);\n                this.updateParticles();\n                this.drawParticles(this.context);\n                this.lastFrameTime = now - (delta % this.options.frameInterval);\n            }\n            requestAnimationFrame(this.runAnimation);\n        }\n    };\n\n    private drawParticles = (context: CanvasRenderingContext2D): void => {\n        if (!this.context || !this.context.canvas) {\n            return;\n        }\n        let x; let x2; let y2;\n        for (const particle of this.particles) {\n            this.context.beginPath();\n            context.lineWidth = particle.diameter;\n            x2 = particle.x + particle.tilt;\n            x = x2 + particle.diameter / 2;\n            y2 = particle.y + particle.tilt + particle.diameter / 2;\n            if (this.options.gradient) {\n                const gradient = context.createLinearGradient(x, particle.y, x2, y2);\n                gradient.addColorStop(0, particle.color);\n                gradient.addColorStop(1.0, particle.color2);\n                context.strokeStyle = gradient;\n            } else {\n                context.strokeStyle = particle.color;\n            }\n            context.moveTo(x, particle.y);\n            context.lineTo(x2, y2);\n            context.stroke();\n        }\n    };\n\n    private updateParticles = () => {\n        if (!this.context || !this.context.canvas) {\n            return;\n        }\n        const width = this.context.canvas.width;\n        const height = this.context.canvas.height;\n        let particle: ConfettiParticle;\n        this.waveAngle += 0.01;\n        for (let i = 0; i < this.particles.length; i++) {\n            particle = this.particles[i];\n            if (!this.isRunning && particle.y < -15) {\n                particle.y = height + 100;\n            } else {\n                particle.tiltAngle += particle.tiltAngleIncrement;\n                particle.x += Math.sin(this.waveAngle) - 0.5;\n                particle.y += (Math.cos(this.waveAngle) + particle.diameter + this.options.speed) * 0.5;\n                particle.tilt = Math.sin(particle.tiltAngle) * 15;\n            }\n            if (particle.x > width + 20 || particle.x < -20 || particle.y > height) {\n                if (this.isRunning && this.particles.length <= this.options.maxCount) {\n                    this.resetParticle(particle, width, height);\n                } else {\n                    this.particles.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n    };\n}\n"],"names":["DefaultOptions","maxCount","speed","frameInterval","alpha","gradient","Confetti","constructor","options","_this","_defineProperty","window","requestAnimationFrame","Date","now","canvas","timeout","arguments","length","undefined","context","getContext","particles","count","push","resetParticle","width","height","isRunning","runAnimation","setTimeout","stop","particle","color","colors","Math","random","color2","x","y","diameter","tilt","tiltAngleIncrement","tiltAngle","PI","clearRect","delta","lastFrameTime","supportsAnimationFrame","updateParticles","drawParticles","x2","y2","beginPath","lineWidth","createLinearGradient","addColorStop","strokeStyle","moveTo","lineTo","stroke","waveAngle","i","sin","cos","splice","_objectSpread"],"sourceRoot":""}