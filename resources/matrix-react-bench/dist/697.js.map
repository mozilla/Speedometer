{"version":3,"file":"697.js","mappings":"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","sources":["webpack://matrix-shell-bench/./node_modules/matrix-react-sdk/src/effects/fireworks/index.ts"],"sourcesContent":["/*\n Copyright 2020 Nurjin Jafar\n Copyright 2020 Nordeck IT + Consulting GmbH.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n */\n\nimport ICanvasEffect from '../ICanvasEffect';\n\nexport type FireworksOptions = {\n    /**\n     * max fireworks count\n     */\n    maxCount: number;\n    /**\n     * gravity value that firework adds to shift from it's start position\n     */\n    gravity: number;\n};\n\ntype FireworksParticle = {\n    /**\n     * color\n     */\n    color: string;\n    /**\n     * x,y are the point where the particle starts to position on canvas\n     */\n    x: number;\n    y: number;\n    /**\n     * vx,vy shift values from x and y\n     */\n    vx: number;\n    vy: number;\n    /**\n     * the alpha opacity of the firework particle (between 0 and 1, where 1 is opaque and 0 is invisible)\n     */\n    alpha: number;\n    /**\n     * w,h width and height\n     */\n    w: number;\n    h: number;\n};\n\nexport const DefaultOptions: FireworksOptions = {\n    maxCount: 500,\n    gravity: 0.05,\n};\n\nexport default class Fireworks implements ICanvasEffect {\n    private readonly options: FireworksOptions;\n\n    constructor(options: { [key: string]: any }) {\n        this.options = { ...DefaultOptions, ...options };\n    }\n\n    private context: CanvasRenderingContext2D | null = null;\n    private supportsAnimationFrame = window.requestAnimationFrame;\n    private particles: Array<FireworksParticle> = [];\n    public isRunning: boolean;\n\n    public start = async (canvas: HTMLCanvasElement, timeout = 3000) => {\n        if (!canvas) {\n            return;\n        }\n        this.isRunning = true;\n        this.context = canvas.getContext('2d');\n        this.supportsAnimationFrame.call(window, this.updateWorld);\n        if (timeout) {\n            window.setTimeout(this.stop, timeout);\n        }\n    };\n\n    private updateWorld = () => {\n        if (!this.isRunning && this.particles.length === 0) return;\n        this.update();\n        this.paint();\n        this.supportsAnimationFrame.call(window, this.updateWorld);\n    };\n\n    private update = () => {\n        if (this.particles.length < this.options.maxCount && this.isRunning) {\n            this.createFirework();\n        }\n        const alive = [];\n        for (let i=0; i<this.particles.length; i++) {\n            if (this.move(this.particles[i])) {\n                alive.push(this.particles[i]);\n            }\n        }\n        this.particles = alive;\n    };\n\n    private paint = () => {\n        if (!this.context || !this.context.canvas) return;\n        this.context.globalCompositeOperation = 'destination-out';\n        this.context.fillStyle = \"rgba(0,0,0,0.5)\";\n        this.context.fillRect(0, 0, this.context.canvas.width, this.context.canvas.height);\n        this.context.globalCompositeOperation = 'lighter';\n        for (let i=0; i<this.particles.length; i++) {\n            this.drawParticle(this.particles[i]);\n        }\n    };\n\n    private createFirework = () => {\n        if (!this.context || !this.context.canvas) return;\n        const width = this.context.canvas.width;\n        const height = this.context.canvas.height;\n        const xPoint = Math.random() * (width - 200) + 100;\n        const yPoint = Math.random() * (height - 200) + 100;\n        const nFire = Math.random() * 50 + 100;\n        const color = \"rgb(\"+(~~(Math.random()*200+55))+\",\"\n            +(~~(Math.random()*200+55))+\",\"+(~~(Math.random()*200+55))+\")\";\n        for (let i=0; i<nFire; i++) {\n            const particle = <FireworksParticle>{};\n            particle.color = color;\n            particle.w = particle.h = Math.random() * 4 + 1;\n            particle.x = xPoint - particle.w / 2;\n            particle.y = yPoint - particle.h / 2;\n            particle.vx = (Math.random()-0.5)*10;\n            particle.vy = (Math.random()-0.5)*10;\n            particle.alpha = Math.random()*.5+.5;\n            const vy = Math.sqrt(25 - particle.vx * particle.vx);\n            if (Math.abs(particle.vy) > vy) {\n                particle.vy = particle.vy > 0 ? vy: -vy;\n            }\n            this.particles.push(particle);\n        }\n    };\n\n    public stop = async () => {\n        this.isRunning = false;\n    };\n\n    private drawParticle = (particle: FireworksParticle): void => {\n        if (!this.context || !this.context.canvas) {\n            return;\n        }\n        this.context.save();\n        this.context.beginPath();\n\n        this.context.translate(particle.x + particle.w / 2, particle.y + particle.h / 2);\n        this.context.arc(0, 0, particle.w, 0, Math.PI * 2);\n        this.context.fillStyle = particle.color;\n        this.context.globalAlpha = particle.alpha;\n\n        this.context.closePath();\n        this.context.fill();\n        this.context.restore();\n    };\n\n    private move = (particle: FireworksParticle) => {\n        particle.x += particle.vx;\n        particle.vy += this.options.gravity;\n        particle.y += particle.vy;\n        particle.alpha -= 0.01;\n        return !(particle.x <= -particle.w || particle.x >= screen.width ||\n            particle.y >= screen.height ||\n            particle.alpha <= 0);\n    };\n}\n"],"names":["DefaultOptions","maxCount","gravity","Fireworks","constructor","options","_this","_defineProperty","window","requestAnimationFrame","async","canvas","timeout","arguments","length","undefined","isRunning","context","getContext","supportsAnimationFrame","call","updateWorld","setTimeout","stop","this","particles","update","paint","createFirework","alive","i","move","push","globalCompositeOperation","fillStyle","fillRect","width","height","drawParticle","xPoint","Math","random","yPoint","nFire","color","particle","w","h","x","y","vx","vy","alpha","sqrt","abs","save","beginPath","translate","arc","PI","globalAlpha","closePath","fill","restore","screen","_objectSpread"],"sourceRoot":""}